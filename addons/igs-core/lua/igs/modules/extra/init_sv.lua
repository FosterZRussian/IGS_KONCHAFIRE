--[[-------------------------------------------------------------------------
	–ß–∞—Ç –∫–æ–º–∞–Ω–¥—ã
---------------------------------------------------------------------------]]
scc.add("igs", IGS.UI)
for command in pairs(IGS.C.COMMANDS or {}) do
	scc.add(command, IGS.UI)
end

--[[-------------------------------------------------------------------------
	–ö–æ–Ω—Å–æ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ igs_info
---------------------------------------------------------------------------]]
local print_info = function()
	local info = {
		server_id = bib.get("igs:serverid"),
		server_ip = game.GetIPAddress(),
		igs_version = cookie.GetString("igs_version") or "unset",
		is_unpacked = file.Exists("igs/apinator.lua", "LUA"),
		-- log_tail = (file.Read("igs_errors.txt") or ""):sub(-1000)
	}
	local luainf do
		local inf = debug.getinfo(IGS.GetSign)
		luainf = {
			line_def = inf.linedefined,
			source = inf.source,
			short_src = inf.short_src,
		}
	end
	info.funcinfo = luainf
	print("\n\n" .. util.TableToJSON(info, true) .. "\n\n")

	print("Log Tail:")
	local log_lines = (file.Read("igs_errors.txt") or ""):Split("\n")
	for i = #log_lines - 100, #log_lines do
		print(i, log_lines[i])
	end
end
-- print_info()
concommand.Add("igs_info", function(pl)
	if IsValid(pl) and not pl:IsSuperAdmin() then return end
	print_info()
end)

--[[-------------------------------------------------------------------------
	–ö–æ–Ω—Å–æ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –¥–µ–Ω–µ–≥
---------------------------------------------------------------------------]]
concommand.Add("addfunds", function(pl, _, _, argss)
	if IsValid(pl) then
		IGS.prints(Color(240, 173, 78), "", pl:Nick(),  " –ø—ã—Ç–∞–ª—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å ", ("addfunds " .. argss),  " —á–µ—Ä–µ–∑ –∏–≥—Ä–æ–≤—É—é –∫–æ–Ω—Å–æ–ª—å")
		-- IGS.Notify(pl, "–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –∫–æ–Ω—Å–æ–ª–∏")
		return
	end

	local sid, amount, note = argss:match("(STEAM_%d:%d:%d+) (%d+) ?(.*)")
	amount = tonumber(amount)
	if note == "" then note = nil end

	if not amount then
		IGS.prints("–§–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã –Ω–∞—Ä—É—à–µ–Ω. –ü—Ä–∏–º–µ—Ä:\n", "addfunds STEAM_0:1:2345678 10 –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ")
		return
	end

	local targ = player.GetBySteamID(sid)
	if targ then
		targ:AddIGSFunds(amount, note, function()
			IGS.prints("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞. ", "–ë–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞: " .. PL_MONEY( targ:IGSFunds() ))
		end)

	-- –ò–≥—Ä–æ–∫ –æ—Ñ—Ñ–ª–∞–π–Ω
	else
		IGS.Transaction(util.SteamIDTo64(sid), amount, note, function()
			IGS.prints("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞, –Ω–æ –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
		end)

	end
end)


concommand.Add("igs_reload", function(pl, _, args)
	if pl == NULL then -- console only
		IGS.prints(args[1] and "Super Reload" or "Casual Reload")
		IGS.sh(args[1] and "autorun/l_ingameshop.lua" or "igs/launcher.lua")
	end
end)


--[[-------------------------------------------------------------------------
	–û—Ç–∫—Ä—ã—Ç–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∫–Ω–æ–ø–∫–æ–π –Ω–∞ –∫–ª–∞–≤–µ
---------------------------------------------------------------------------]]
-- https://wiki.facepunch.com/gmod/Enums/KEY
hook.Add("PlayerButtonDown", "IGS.UI", function(pl, iButton)
	if iButton == IGS.C.MENUBUTTON then
		scc.run(pl, "igs")
	end
end)


--[[-------------------------------------------------------------------------
	–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –ø–æ–∫—É–ø–∫–µ –∏—Ç–µ–º–æ–≤
	https://trello.com/c/SvZ8UE0F/472-—Å–æ–æ–±—â–µ–Ω–∏–µ-–æ-–ø–æ–∫—É–ø–∫–µ
---------------------------------------------------------------------------]]
hook.Add("IGS.PlayerPurchasedItem", "IGS.BroadcastPurchase", function(pl, ITEM)
	if IGS.C.BroadcastPurchase == false then return end -- TODO —Å–¥–µ–ª–∞—Ç—å –º–æ–¥—É–ª–µ–º

	IGS.NotifyAll(pl:Nick() .. " –∫—É–ø–∏–ª " .. ITEM:Name())
end)


--[[-------------------------------------------------------------------------
	–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å—á–µ—Ç–∞
	https://trello.com/c/6rMMH3cn/483-—Å–æ–æ–±—â–µ–Ω–∏–µ-–æ-–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏-—Å—á–µ—Ç–∞
---------------------------------------------------------------------------]]

hook.Add("IGS.PlayerDonate", "ThanksForDonate", function(pl, rub)
	local score = pl.igs_score -- TODO: make netvar

	IGS.Notify(pl, Format("–°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á–µ—Ç–∞. " ..
		"–í–∞—à –Ω–æ–≤—ã–π Score –Ω–∞ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö - %d. " ..
		"–ß—Ç–æ —Ç–∞–∫–æ–µ Score: vk.cc/caHTZi", score))

	local rub_str  = PL_MONEY(rub)
	local full_str = Format("%s –ø–æ–ø–æ–ª–Ω–∏–ª —Å—á–µ—Ç –Ω–∞ %s. –ï–≥–æ –Ω–æ–≤—ã–π Score: %s", pl:Nick(), rub_str, score)

	IGS.NotifyAll(full_str)
end)

hook.Add("IGS.PlayerPurchasesLoaded", "BalanceRemember", function(pl)
	local balance = pl:IGSFunds()
	if balance >= 10 then
		timer.Simple(10, function()
			if not IsValid(pl) then return end
			IGS.Notify(pl, "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å " .. IGS.SignPrice(balance) .. " —á–µ—Ä–µ–∑ /donate")
			IGS.Notify(pl, "–í–∞—à Score " .. (pl.igs_score or 0) .. ". –ü–æ–¥—Ä–æ–±–Ω–µ–µ: vk.cc/caHTZi") -- or 0 –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
		end)
	end
end)

--[[-------------------------------------------------------------------------
	–ü–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –≤–µ—Ä—Å–∏–π
---------------------------------------------------------------------------]]
timer.Simple(1, function() -- http.Fetch
	IGS.prints("–ü–æ–∏—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
	if not IGS_REPO then return end
	http.Fetch("https://api.github.com/repos/" .. IGS_REPO .. "/releases", function(json)
		local releases = util.JSONToTable(json)
		assert(releases[1], "–†–µ–ª–∏–∑–æ–≤ –Ω–µ—Ç. –ù—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å CI") -- —Ñ–æ—Ä–∫

		table.sort(releases, function(a, b)
			return tonumber(a.tag_name) > tonumber(b.tag_name)
		end)

		local current_ver    = cookie.GetNumber("igs_version") or 0 -- or 0 –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –ø—Ä–æ –æ–±–Ω–æ–≤—É, –µ—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
		local freshest_major = math.floor(releases[1].tag_name)
		local current_major  = math.floor(current_ver)

		if freshest_major > current_major then
			local info_url = "https://github.com/" .. IGS_REPO .. "/releases/tag/" .. freshest_major
			IGS.prints("üÜï –î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è Major –≤–µ—Ä—Å–∏—è: ", freshest_major, ". –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: ", (current_major == 0 and "—Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–∞—è üö®" or current_major), "\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–¥–µ—Å—å: ", info_url)
			if current_major == 0 then
				IGS.prints("–î–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ addons –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ ", "igs-modification")
			end
		else
			IGS.prints("Major –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç")
		end

		local freshest_suitable -- "123.2"
		for _, release in ipairs(releases) do -- –æ—Ç —Å–≤–µ–∂–∞–π—à–∏—Ö
			if current_ver == tonumber(release.tag_name) then break end -- 123.1 current and 123.1 suitable
			if math.floor(release.tag_name) == current_major then -- (123).1 == (123).2
				freshest_suitable = release.tag_name
				break
			end
		end

		if freshest_suitable then
			IGS.prints("üÜï –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ–µ soft –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: ", current_ver, ", –Ω–æ–≤–∞—è: ", freshest_suitable)
			local url = "https://github.com/" .. IGS_REPO .. "/releases/download/" .. freshest_suitable .. "/superfile.json"
			http.Fetch(url, function(superfile)
				IGS.prints(Color(100, 250, 100), "", "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ! ", "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è")
				file.Write("igs/superfile.txt", superfile)
				cookie.Set("igs_version", freshest_suitable)
			end, error)
		else
			IGS.prints("Soft –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç")
		end
	end, error)
end)
