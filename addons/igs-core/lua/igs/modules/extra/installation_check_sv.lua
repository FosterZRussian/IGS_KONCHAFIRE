local function isMounted(path)
	return file.Exists(path, "LUA")
end

local function isWorkshopped(path)
	return file.Exists("lua/" .. path, "WORKSHOP")
end

local function isDownloaded(path)
	return IGS_MOUNT and IGS_MOUNT[path]
end



local function isUnpacked(path)
	return isMounted(path) and not (isWorkshopped(path) or isDownloaded(path))
end

hook.Add("IGS.Initialized", "installation_check", function()
	local path = "igs/launcher.lua"
	if isUnpacked(path) then
		IGS.prints(Color(250, 100, 100), "–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –∞–≤—Ç–æ–¥–æ–Ω–∞—Ç —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω –≤ /addons. ", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç üö®")
	end

	if isWorkshopped(path) and isDownloaded(path) then
		IGS.prints("–£–¥–∞–ª–∏—Ç–µ –∞–≤—Ç–æ–¥–æ–Ω–∞—Ç –∏–∑ –≤–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –≤–æ—Ä–∫—à–æ–ø–µ. –û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ GitHub")
	end
end)

-- PRINT(file.Find("*", "LUA")) -- mediaplayer, wire
-- PRINT(file.Find("lua/*", "THIRDPARTY")) -- mediaplayer, wire


-- print(isUnpacked("wire/wireshared.lua"))
